name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert

      - name: Check branch naming convention
        run: |
          BRANCH_NAME=${GITHUB_HEAD_REF}
          if ! [[ $BRANCH_NAME =~ ^(feature|bugfix|hotfix|release)/[a-z0-9-]+$ ]]; then
            echo "Branch name '$BRANCH_NAME' does not follow convention"
            echo "Expected format: (feature|bugfix|hotfix|release)/description"
            exit 1
          fi

  size-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check PR size
        uses: actions/github-script@v6
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            
            const changes = files.reduce((acc, file) => {
              acc.additions += file.additions;
              acc.deletions += file.deletions;
              acc.files += 1;
              return acc;
            }, { additions: 0, deletions: 0, files: 0 });
            
            const MAX_CHANGES = 500;
            const MAX_FILES = 20;
            
            if (changes.additions + changes.deletions > MAX_CHANGES) {
              core.setFailed(`PR is too large. Contains ${changes.additions + changes.deletions} changes, maximum is ${MAX_CHANGES}`);
            }
            
            if (changes.files > MAX_FILES) {
              core.setFailed(`PR touches too many files. Contains ${changes.files} files, maximum is ${MAX_FILES}`);
            }

  conventional-commits:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check commit messages
        uses: wagoid/commitlint-github-action@v5

  required-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check for required files
        run: |
          required_files=(
            "README.md"
            "CHANGELOG.md"
            "requirements.txt"
            "setup.py"
            ".env.example"
          )
          
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "Missing required file: $file"
              exit 1
            fi
          done

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Run security scan
        run: |
          bandit -r src/
          safety check

      - name: Run SAST scan
        uses: github/codeql-action/init@v2
        with:
          languages: python, javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  dependency-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Review dependencies
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high

  license-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install licensecheck

      - name: Check licenses
        run: licensecheck --tsv --recursive .

  assign-reviewers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Auto-assign reviewers
        uses: kentaro-m/auto-assign-action@v1.2.5
        with:
          configuration-path: .github/auto-assign.yml
