name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: ''

jobs:
  release:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Generate changelog
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v3
      with:
        configuration: |
          {
            "categories": [
              {
                "title": "## 🚀 Features",
                "labels": ["feature"]
              },
              {
                "title": "## 🐛 Fixes",
                "labels": ["fix"]
              },
              {
                "title": "## 📝 Documentation",
                "labels": ["documentation"]
              },
              {
                "title": "## 🔨 Maintenance",
                "labels": ["maintenance"]
              }
            ]
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build executable
      run: |
        pyinstaller --onefile --windowed --name HeadAI src/main.py

    - name: Create installer
      run: |
        iscc installer.iss

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/HeadAI.exe
          Output/HeadAISetup.exe
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update version
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo ${{ github.event.inputs.version }} > version.txt
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add version.txt
        git commit -m "Bump version to ${{ github.event.inputs.version }}"
        git tag v${{ github.event.inputs.version }}
        git push
        git push --tags
